//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Patterns.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Patterns.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to abstract class AbstractFactory
        ///{
        ///    public abstract AbstractProductA CreateProductA();
        ///    public abstract AbstractProductB CreateProductB();
        ///}
        ///class ConcreteFactory1: AbstractFactory
        ///{
        ///    public override AbstractProductA CreateProductA()
        ///    {
        ///        return new ProductA1();
        ///    }
        ///         
        ///    public override AbstractProductB CreateProductB()   
        ///    {
        ///        return new ProductB1(); 
        ///    }
        ///}
        ///class ConcreteFactory2: AbstractFactory
        ///{
        ///    public override AbstractProductA CreateProductA( [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string abstractfactory {
            get {
                return ResourceManager.GetString("abstractfactory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to class Client
        ///{
        ///    public void Request(Target target)
        ///    {
        ///        target.Request();
        ///    }
        ///}
        ///// класс, к которому надо адаптировать другой класс   
        ///class Target
        ///{
        ///    public virtual void Request()
        ///    {}
        ///}
        ///  
        ///// Адаптер
        ///class Adapter : Target
        ///{
        ///    private Adaptee adaptee = new Adaptee();
        ///  
        ///    public override void Request()
        ///    {
        ///        adaptee.SpecificRequest();
        ///    }
        ///}
        ///  
        ///// Адаптируемый класс
        ///class Adaptee
        ///{
        ///    public void SpecificRequest()
        ///    {}
        ///}.
        /// </summary>
        internal static string adapter {
            get {
                return ResourceManager.GetString("adapter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string bridge {
            get {
                return ResourceManager.GetString("bridge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to class Client
        ///{
        ///    void Main()
        ///    {
        ///        Builder builder = new ConcreteBuilder();
        ///        Director director = new Director(builder);
        ///        director.Construct();
        ///        Product product = builder.GetResult();
        ///    }
        ///}
        ///class Director
        ///{
        ///    Builder builder;
        ///    public Director(Builder builder)
        ///    {
        ///        this.builder = builder;
        ///    }
        ///    public void Construct()
        ///    {
        ///        builder.BuildPartA();
        ///        builder.BuildPartB();
        ///        builder.BuildPartC();
        ///    }
        ///}
        /// 
        ///abstract cla [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string builder {
            get {
                return ResourceManager.GetString("builder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to class Client
        ///{
        ///    public void Main()
        ///    {
        ///        Component root = new Composite(&quot;Root&quot;);
        ///        Component leaf = new Leaf(&quot;Leaf&quot;);
        ///        Composite subtree = new Composite(&quot;Subtree&quot;);
        ///        root.Add(leaf);
        ///        root.Add(subtree);
        ///        root.Display();
        ///    }
        ///}
        ///abstract class Component
        ///{
        ///    protected string name;
        /// 
        ///    public Component(string name)
        ///    {
        ///        this.name = name;
        ///    }
        /// 
        ///    public abstract void Display();
        ///    public abstract void Add(Component c); 
        ///    pub [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string composite {
            get {
                return ResourceManager.GetString("composite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to abstract class Component
        ///{
        ///    public abstract void Operation();
        ///}
        ///class ConcreteComponent  Component
        ///{
        ///    public override void Operation()
        ///    {}
        ///}
        ///abstract class Decorator  Component
        ///{
        ///    protected Component component;
        /// 
        ///    public void SetComponent(Component component)
        ///    {
        ///        this.component = component;
        ///    }
        /// 
        ///    public override void Operation()
        ///    {
        ///        if (component != null)
        ///            component.Operation();
        ///    }
        ///}
        ///class ConcreteDecoratorA  Decorator
        ///{
        ///    pu [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string decorator {
            get {
                return ResourceManager.GetString("decorator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to class SubsystemA
        ///{
        ///    public void A1()
        ///    {}
        ///}
        ///class SubsystemB
        ///{
        ///    public void B1()
        ///    {}
        ///}
        ///class SubsystemC
        ///{
        ///    public void C1()
        ///    {}
        ///}
        /// 
        ///public class Facade
        ///{
        ///    SubsystemA subsystemA;
        ///    SubsystemB subsystemB;
        ///    SubsystemC subsystemC;
        /// 
        ///    public Facade(SubsystemA sa, SubsystemB sb, SubsystemC sc)
        ///    {
        ///        subsystemA = sa;
        ///        subsystemB = sb;
        ///        subsystemC = sc;
        ///    }
        ///    public void Operation1()
        ///    {
        ///        subsystemA.A1();
        ///        subsystem [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string facade {
            get {
                return ResourceManager.GetString("facade", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to abstract class Product
        ///{}
        ///
        ///class ConcreteProductA : Product
        ///{}
        ///
        ///class ConcreteProductB : Product\n{}\n\nabstract class Creator
        ///{
        ///    public abstract Product FactoryMethod();
        ///}
        ///
        ///class ConcreteCreatorA : Creator
        ///{
        ///    public override Product FactoryMethod() { return new ConcreteProductA(); }
        ///}
        ///
        ///class ConcreteCreatorB : Creator
        ///{
        ///    public override Product FactoryMethod() { return new ConcreteProductB(); }
        ///}.
        /// </summary>
        internal static string factorymethod {
            get {
                return ResourceManager.GetString("factorymethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to class FlyweightFactory
        ///{
        ///    Hashtable flyweights = new Hashtable();
        ///    public FlyweightFactory()
        ///    {
        ///        flyweights.Add(&quot;X&quot;, new ConcreteFlyweight());
        ///        flyweights.Add(&quot;Y&quot;, new ConcreteFlyweight());
        ///        flyweights.Add(&quot;Z&quot;, new ConcreteFlyweight());
        ///    }
        ///    public Flyweight GetFlyweight(string key)
        ///    {
        ///        if (!flyweights.ContainsKey(key))
        ///            flyweights.Add(key, new ConcreteFlyweight());
        ///        return flyweights[key] as Flyweight;
        ///    }
        ///}
        /// 
        ///abstract class  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string flyweight {
            get {
                return ResourceManager.GetString("flyweight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to class Client
        ///{
        ///    void Operation()
        ///    {
        ///        Prototype prototype = new ConcretePrototype1(1);
        ///        Prototype clone = prototype.Clone();
        ///        prototype = new ConcretePrototype2(2);
        ///        clone = prototype.Clone();
        ///    }
        ///}
        /// 
        ///abstract class Prototype
        ///{
        ///    public int Id { get; private set; }
        ///    public Prototype(int id)
        ///    {
        ///        this.Id = id;
        ///    }
        ///    public abstract Prototype Clone();
        ///}
        /// 
        ///class ConcretePrototype1 : Prototype
        ///{
        ///    public ConcretePrototype1(int id)
        ///   [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string prototype {
            get {
                return ResourceManager.GetString("prototype", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to class Client
        ///{
        ///    void Main()
        ///    {
        ///        Subject subject = new Proxy();
        ///        subject.Request();
        ///    }
        ///}
        ///abstract class Subject
        ///{
        ///    public abstract void Request();
        ///}
        /// 
        ///class RealSubject : Subject
        ///{
        ///    public override void Request()
        ///    {}
        ///}
        ///class Proxy : Subject
        ///{
        ///    RealSubject realSubject;
        ///    public override void Request()
        ///    {
        ///        if (realSubject == null)
        ///            realSubject = new RealSubject();
        ///        realSubject.Request();
        ///    }
        ///}.
        /// </summary>
        internal static string proxy {
            get {
                return ResourceManager.GetString("proxy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to class Singleton
        ///{
        ///    private static Singleton instance;
        /// 
        ///    private Singleton()
        ///    {}
        /// 
        ///    public static Singleton getInstance()
        ///    {
        ///        if (instance == null)
        ///            instance = new Singleton();
        ///        return instance;
        ///    }
        ///}.
        /// </summary>
        internal static string singleton {
            get {
                return ResourceManager.GetString("singleton", resourceCulture);
            }
        }
    }
}
